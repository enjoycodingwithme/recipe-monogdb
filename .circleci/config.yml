  Skip to content
    Search or jump to…

    Pull requests
    Issues
    Marketplace
    Explore

    @enjoycodingwithme
    Learn Git and GitHub without any code!
    Using the Hello World guide, you’ll start a branch, write comments, and open a pull request.


    springframeworkguru
    /
    spring5-reactive-mongo-recipe-app
    3
    21280
    Code
    Issues
    Pull requests
    6
    Actions
    Projects
    Wiki
    Security
    Insights
    spring5-reactive-mongo-recipe-app/.circleci/config.yml
    @springframeworkguru
    springframeworkguru Init Project Add
    Latest commit b8e95dc on 17 Aug 2017
    History
    1 contributor
    59 lines (46 sloc)  1.49 KB

  # Java Maven CircleCI 2.0 configuration file

  # Check https://circleci.com/docs/2.0/language-java/ for more details
  #
  version: 2
  jobs:
    build:
      docker:
        # specify the version you desire here
        - image: circleci/openjdk:8-jdk

        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
        # - image: circleci/postgres:9.4

      working_directory: ~/repo

      environment:
        # Customize the JVM maximum heap limit
        JVM_OPTS: -Xmx3200m
        TERM: dumb

      steps:
        - checkout

        # Download and cache dependencies
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "build.gradle" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-

        - run: gradle dependencies

        - save_cache:
            paths:
              - ~/.m2
            key: v1-dependencies-{{ checksum "build.gradle" }}

        # run tests! and gen code coverage
        - run: ./gradlew clean test jacocoTestReport

        - run:
            name: Save test results
            command: |
              mkdir -p ~/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
            when: always

        - store_test_results:
            path: ~/junit

        - store_artifacts:
            path: ~/junit

        - run:
            name: Send to CodeCov
            command: bash <(curl -s https://codecov.io/bash)

